name: Release

on:
  workflow_dispatch:
    inputs:
      semver-bump:
        description: Semver bump release type
        required: true
        type: choice
        default: patch
        options:
          - major
          - minor
          - patch

concurrency: release

jobs:

  verified:
    uses: ./.github/workflows/verify.yml

  check-changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: ./.github/workflows/changelog_check.sh CHANGELOG.md

  publish-cargo-crate:
    needs: [ verified, check-changelog ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup install stable
      - uses: swatinem/rust-cache@v2
      - run: cargo install cargo-release
      - run: cargo release --no-confirm --execute $SEMVER_BUMP
        env:
          CARGO_REGISTRY_TOKEN: ${{secrets.CRATES_IO_API_TOKEN}}
          SEMVER_BUMP: ${{github.event.inputs.semver-bump}}
      - id: semver
        run: |
          VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/[\"]/, "", $2); printf("%s",$2) }' Cargo.toml)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag_name=v$VERSION" >> "$GITHUB_OUTPUT"
    outputs:
      version: ${{steps.semver.outputs.version}}
      tag_name: ${{steps.semver.outputs.tag_name}}

  push-docker-image:
    needs: publish-cargo-crate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: 84tech
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: docker
        run: |
          docker build -t 84tech/cquill --build-arg CQUILL_VERSION=$VERSION -f cquill.install.Dockerfile .
          docker tag 84tech/cquill 84tech/cquill:$VERSION
          docker push -a 84tech/cquill
        env:
          VERSION: ${{needs.publish-cargo-crate.outputs.version}}

  create-gh-release:
    runs-on: ubuntu-22.04
    needs: publish-cargo-crate
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.publish-cargo-crate.outputs.version }}
      - name: Create release
        id: create
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.publish-cargo-crate.outputs.version }}
          VERSION: ${{ needs.publish-cargo-crate.outputs.version }}
        run: |
          CHANGELOG=$(./.github/workflows/changelog_get.sh CHANGELOG.md $VERSION)
          CRATES_URL="https://crates.io/crates/cquill/$VERSION"
          RELEASE_NOTES="[Published on crates.io]($CRATES_URL)\r\n\r\n### Release notes\r\n\r\n$CHANGELOG"
          CREATED_RELEASE=$(echo "$RELEASE_NOTES" | gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/eighty4/l3/releases \
            -f tag_name="$TAG_NAME" \
            -f name="CLI v$VERSION" \
            -F body=@- \
            -F draft=false \
            -F prerelease=false \
            -F generate_release_notes=false)
          echo "release_id=$(echo $CREATED_RELEASE | jq '.id')" >> "$GITHUB_OUTPUT"
          echo "upload_hostname=$(echo $CREATED_RELEASE | jq '.upload_url' | cut -d'/' -f3)" >> "$GITHUB_OUTPUT"
    outputs:
      release_id: ${{ steps.create.outputs.release_id }}
      tag_name: ${{ needs.publish-cargo-crate.outputs.tag_name }}
      upload_hostname: ${{ steps.create.outputs.upload_hostname }}

  publish-linux-and-mac:
    needs: create-gh-release
    uses: ./.github/workflows/publish.yml
    with:
      release_id: ${{ needs.create-gh-release.outputs.release_id }}
      tag_name: ${{ needs.create-gh-release.outputs.tag_name }}
      upload_hostname: ${{ needs.create-gh-release.outputs.upload_hostname }}

  publish-windows:
    needs: create-gh-release
    uses: ./.github/workflows/publish_windows.yml
    with:
      release_id: ${{ needs.create-gh-release.outputs.release_id }}
      tag_name: ${{ needs.create-gh-release.outputs.tag_name }}
      upload_hostname: ${{ needs.create-gh-release.outputs.upload_hostname }}
